{"mappings":"AASA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjBbQ,UAAY,CACVC,KAAMC,SAASC,cAAc,QAC7BX,MAAOU,SAASC,cAAc,gBAC9BC,KAAMF,SAASC,cAAc,eAC7BE,OAAQH,SAASC,cAAc,iBAC/BG,OAAQJ,SAASC,cAAc,WAgBjCH,UAAUC,KAAKM,iBAAiB,UAEhC,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOX,UAAUR,MAAMoB,OACpCR,EAAOO,OAAOX,UAAUI,KAAKQ,OAC7BP,EAASM,OAAOX,UAAUK,OAAOO,OAErC,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAAG,CAGnCvB,EAAcuB,EAFKH,EAAaN,EAAOS,GAGpCC,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,MAAU,IAE7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["\nselectors = {\n  form: document.querySelector(\"form\"),\n  delay: document.querySelector(\"[name=delay]\"),\n  step: document.querySelector(\"[name=step]\"),\n  amount: document.querySelector(\"[name=amount]\"),\n  button: document.querySelector(\"button\"),\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nselectors.form.addEventListener(\"submit\", handlerClick); //needed for .form\n\nfunction handlerClick(event) {\n  event.preventDefault();\n  let valueDelay = Number(selectors.delay.value);\n  let step = Number(selectors.step.value);\n  let amount = Number(selectors.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let promiseDelay = valueDelay + step * i;\n  \n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n  }\n}\n\n\n\n\n\n\n\n\n\n  /*\n  -------------------------\n  const isSuccess = true;\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve(\"Success! Value passed to resolve function\");\n    } else {\n      reject(\"Error! Error passed to reject function\");\n    }\n  }, 2000);\n});*/\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","selectors","form","document","querySelector","step","amount","button","addEventListener","event","preventDefault","valueDelay","Number","value","i","then","console","log","catch"],"version":3,"file":"03-promises.cc950640.js.map"}